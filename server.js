const express = require('express');
const cors = require('cors');
const { body, validationResult } = require('express-validator');
const nodemailer = require('nodemailer');
const rateLimit = require('express-rate-limit');

const app = express();
const PORT = process.env.PORT || 3000;

// Rate limiting
const limiter = rateLimit({
    windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
    max: 50, // –º–∞–∫—Å–∏–º—É–º 50 –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –æ–¥–Ω–æ–≥–æ IP –∑–∞ 15 –º–∏–Ω—É—Ç
    message: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —ç—Ç–æ–≥–æ IP, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
    standardHeaders: true,
    legacyHeaders: false,
});

app.use(limiter);

// Middleware
app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true, limit: '10mb' }));

// CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω
const corsOptions = {
    origin: [
        'https://felixme.online',
        'https://www.felixme.online',
        'http://felixme.online',
        'http://www.felixme.online',
        'https://webdev-it.github.io',
        'http://localhost:3000',
        'http://localhost:3001',
        'http://127.0.0.1:3000',
        'http://127.0.0.1:3001'
    ],
    credentials: true,
    methods: ['GET', 'POST', 'OPTIONS'],
    allowedHeaders: ['Content-Type', 'Authorization', 'x-test-mode']
};

app.use(cors(corsOptions));

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è email —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ—Ä–∞  
const createTransporter = () => {
    return nodemailer.createTransporter({
        service: 'Gmail',
        auth: {
            user: process.env.EMAIL_USER || 'minecraftpedit66@gmail.com',
            pass: process.env.EMAIL_PASS || 'your-app-password'
        },
        tls: {
            rejectUnauthorized: false
        }
    });
};

// –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
const validateForm = [
    body('name')
        .trim()
        .isLength({ min: 2, max: 100 })
        .withMessage('–ò–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 2 –¥–æ 100 —Å–∏–º–≤–æ–ª–æ–≤')
        .matches(/^[–∞-—è—ëa-z√†√°√¢√£√§√•√¶√ß√®√©√™√´√¨√≠√Æ√Ø√∞√±√≤√≥√¥√µ√∂√∏√π√∫√ª√º√Ω√ø\s\-\.\']+$/i)
        .withMessage('–ò–º—è –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, –ø—Ä–æ–±–µ–ª—ã, –¥–µ—Ñ–∏—Å—ã –∏ —Ç–æ—á–∫–∏'),
    
    body('attendance')
        .isIn(['–ë—É–¥—É –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å', '–ù–µ —Å–º–æ–≥—É –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å', '–ü–æ–∫–∞ –Ω–µ –∑–Ω–∞—é'])
        .withMessage('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è'),
    
    body('wishes')
        .optional()
        .trim()
        .isLength({ max: 500 })
        .withMessage('–ü–æ–∂–µ–ª–∞–Ω–∏—è –Ω–µ –¥–æ–ª–∂–Ω—ã –ø—Ä–µ–≤—ã—à–∞—Ç—å 500 —Å–∏–º–≤–æ–ª–æ–≤')
];

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ API
app.get('/', (req, res) => {
    res.json({
        message: 'üíí Wedding Invitation Backend',
        status: 'active',
        version: '1.1.0-simplified',
        endpoints: {
            submit: 'POST /api/submit-form',
            health: 'GET /api/health'
        },
        wedding: {
            couple: '–ò–∫—Ä–æ–º—Ö—É–¥–∑—è & –°–∞—Ä–≤–∏–Ω–æ–∑',
            date: '6 –æ–∫—Ç—è–±—Ä—è 2025',
            time: '18:00',
            venue: '–†–µ—Å—Ç–æ—Ä–∞–Ω ¬´–ë–∞–∑–º–æ—Ä–æ¬ª'
        }
    });
});

// Health check
app.get('/api/health', (req, res) => {
    res.json({
        status: 'healthy',
        timestamp: new Date().toISOString(),
        uptime: process.uptime()
    });
});

// –û—Å–Ω–æ–≤–Ω–æ–π endpoint –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
app.post('/api/submit-form', validateForm, async (req, res) => {
    try {
        console.log('üìù –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', req.body);
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        const errors = validationResult(req);
        if (!errors.isEmpty()) {
            console.log('‚ùå –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:', errors.array());
            return res.status(400).json({
                success: false,
                message: '–û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö',
                errors: errors.array()
            });
        }

        const { name, attendance, wishes } = req.body;
        const timestamp = new Date();
        
        console.log(`‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞ –¥–ª—è: ${name} - ${attendance}`);

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ)
        if (process.env.NODE_ENV === 'test' || req.headers['x-test-mode'] === 'true') {
            console.log('üß™ –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú: –ü–∏—Å—å–º–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è');
            console.log(`üìã –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: ${name} - ${attendance}`);
            
            // –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
            res.json({
                success: true,
                message: '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞! (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)',
                data: {
                    name,
                    attendance,
                    submitted_at: timestamp.toISOString()
                }
            });
        } else {
            // –†–µ–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ - –ø—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è
            const transporter = createTransporter();
            
            // –ü—Ä–æ—Å—Ç—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–∏—Å—å–º–∞ (—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç)
            const mailOptions = {
                from: {
                    name: '–°–≤–∞–¥–µ–±–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ',
                    address: process.env.EMAIL_USER || 'minecraftpedit66@gmail.com'
                },
                to: process.env.RECIPIENT_EMAIL || 'abdumalikabdumalikov72@gmail.com',
                subject: `üíí –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–≤–∞–¥—å–±—É –æ—Ç ${name}`,
                text: `
–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –°–í–ê–î–¨–ë–£

üë§ –ò–º—è –≥–æ—Å—Ç—è: ${name}
‚úÖ –°—Ç–∞—Ç—É—Å –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è: ${attendance}
üíå –ü–æ–∂–µ–ª–∞–Ω–∏—è –º–æ–ª–æ–¥–æ–∂–µ–Ω–∞–º: ${wishes || '–ü–æ–∂–µ–ª–∞–Ω–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω—ã'}

üìÖ –î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: ${timestamp.toLocaleString('ru-RU')}

---
üíí –°–≤–∞–¥—å–±–∞: –ò–∫—Ä–æ–º—Ö—É–¥–∂–∞ & –°–∞—Ä–≤–∏–Ω–æ–∑
üìÖ –î–∞—Ç–∞: 6 –æ–∫—Ç—è–±—Ä—è 2025
üïï –í—Ä–µ–º—è: 18:00
üèõÔ∏è –ú–µ—Å—Ç–æ: –†–µ—Å—Ç–æ—Ä–∞–Ω ¬´–ë–∞–∑–º–æ—Ä–æ¬ª

–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç —Å–∏—Å—Ç–µ–º—ã —Å–≤–∞–¥–µ–±–Ω—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
                `.trim()
            };

            await transporter.sendMail(mailOptions);

            // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
            console.log(`‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞: ${name} - ${attendance}`);
            console.log(`üìß Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞: ${mailOptions.to}`);
            console.log(`‚è∞ –í—Ä–µ–º—è: ${timestamp.toLocaleString('ru-RU')}`);

            // –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
            res.json({
                success: true,
                message: '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!',
                data: {
                    name,
                    attendance,
                    submitted_at: timestamp.toISOString()
                }
            });
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ /api/submit-form:', error);
        
        res.status(500).json({
            success: false,
            message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
            error: process.env.NODE_ENV === 'development' ? error.message : 'Internal server error'
        });
    }
});

// 404 –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
app.use('*', (req, res) => {
    res.status(404).json({
        success: false,
        message: 'Endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω',
        availableEndpoints: [
            'GET /',
            'GET /api/health', 
            'POST /api/submit-form'
        ]
    });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
app.use((error, req, res, next) => {
    console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
    res.status(500).json({
        success: false,
        message: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
    console.log(`
============================================================
üöÄ Wedding Invitation Backend (Simplified) –∑–∞–ø—É—â–µ–Ω!
üì° –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É: ${PORT}
üåê URL: ${PORT === 3000 ? 'https://wedding-invitation-backend-lj0d.onrender.com' : `http://localhost:${PORT}`}
üìß Email –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞: ${process.env.RECIPIENT_EMAIL || 'abdumalikabdumalikov72@gmail.com'}
üíí –°–≤–∞–¥—å–±–∞: –ò–∫—Ä–æ–º—Ö—É–¥–∂–∞ & –°–∞—Ä–≤–∏–Ω–æ–∑
üìÖ –î–∞—Ç–∞: 6 –æ–∫—Ç—è–±—Ä—è 2025 –≤ 18:00
============================================================
    `);
});

// Graceful shutdown
process.on('SIGINT', () => {
    console.log('\nüîÑ –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞...');
    process.exit(0);
});

process.on('SIGTERM', () => {
    console.log('\nüîÑ –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞...');
    process.exit(0);
});